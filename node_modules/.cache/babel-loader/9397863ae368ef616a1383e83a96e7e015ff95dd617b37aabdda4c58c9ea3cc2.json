{"ast":null,"code":"import { Carousel3d, Slide } from 'vue-carousel-3d';\nimport SlideTmplWhite from '@/components/SlideTmplWhite.vue';\nexport default {\n  data() {\n    return {\n      heightInPixels: 0\n    };\n  },\n  mounted() {\n    // Calculate 70% of the viewport height in pixels\n    const viewportHeight = window.innerHeight;\n    this.heightInPixels = Math.floor(viewportHeight * 0.6);\n  },\n  components: {\n    Carousel3d,\n    Slide,\n    SlideTmplWhite\n  }\n};","map":{"version":3,"names":["Carousel3d","Slide","SlideTmplWhite","data","heightInPixels","mounted","viewportHeight","window","innerHeight","Math","floor","components"],"sources":["src/views/HomeView.vue"],"sourcesContent":["<template>\r\n  <div class=\"home\">\r\n  <div class=\"carou\">\r\n  <carousel-3d :controls-visible=\"true\" :controls-prev-html=\"'&#10092; '\" :controls-next-html=\"'&#10093;'\" \r\n               :controls-width=\"30\" :controls-height=\"60\" :height=\"heightInPixels\" :width=\"heightInPixels*1.75\" :autoplay=\"true\" :autoplay-timeout=\"4000\" >\r\n  <slide :index=\"0\" class=\"slide\">\r\n    <router-link to=\"/DVB\">\r\n    <SlideTmplWhite title=\"InMoov and Jasper\" caption='Development then project management for DavinciBot in the creation of the humanoid robots \"InMoov\" and \"JASPER\"' image-path=\"/DVB/InMoov_Working.png\" textcolor=\"white\"/>\r\n    </router-link>\r\n  </slide>\r\n  <slide :index=\"1\" class=\"slide\">\r\n    <router-link to=\"/ExoTouch\">\r\n    <SlideTmplWhite title=\"ExoTouch haptic gloves\" caption='Creation of haptic gloves with force feedback for virtual reality, DIY and inexpensive.' image-path=\"/ExoTouch/ExoTouchV3.jpeg\" textcolor=\"white\"/>\r\n    </router-link>\r\n  </slide>\r\n  <slide :index=\"2\" class=\"slide\">\r\n    <router-link to=\"/RHIM\">\r\n    <SlideTmplWhite title=\"Robotic haptic interface\" caption='Encounter-type haptic robots for desk-size environnement exploration in virtual reality' image-path=\"/Internship/SDV1.PNG\" textcolor=\"white\"/>\r\n    </router-link>\r\n  </slide>\r\n  <slide :index=\"3\" class=\"slide\">\r\n    <router-link to=\"/HapticSuit\">\r\n    <SlideTmplWhite title=\"Environnemental haptic suit (WIP)\" caption='Creation of a haptic suit for environmental thermal feedback in virtual reality. Ongoing project.' image-path=\"\" textcolor=\"white\"/>\r\n    </router-link>\r\n  </slide>\r\n  <slide :index=\"4\" class=\"slide\">\r\n    <router-link to=\"/Network\">\r\n    <SlideTmplWhite title=\"HTML/CSS/JS developpement and self web hosting\" caption='Creation of websites in HTML/CSS/Vue.js and implementation of network infrastructure to host web sites and services.' image-path=\"/Hosting/thumbnail.png\" textcolor=\"white\"/>\r\n    </router-link>\r\n  </slide>\r\n</carousel-3d>\r\n  </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\nimport { Carousel3d, Slide } from 'vue-carousel-3d';\r\nimport SlideTmplWhite from '@/components/SlideTmplWhite.vue';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      heightInPixels: 0,\r\n    };\r\n  },\r\n  mounted() {\r\n    // Calculate 70% of the viewport height in pixels\r\n    const viewportHeight = window.innerHeight;\r\n    this.heightInPixels = Math.floor(viewportHeight * 0.6);\r\n  },\r\n  components: {\r\n    Carousel3d,\r\n    Slide,\r\n    SlideTmplWhite\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n\r\n.custom-carousel {\r\n  height: 100vh; \r\n}\r\n\r\n\r\n.carou{\r\n  position: relative;\r\n  top: 10%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding-bottom: 500px;\r\n  height: 800px;\r\n  \r\n  z-index:1000;\r\n}\r\n\r\n.home{\r\n  height: 95vh;\r\n  background: linear-gradient(to bottom, #333, #812A89); /* Dark stage gradient background */\r\n  overflow: hidden;\r\n}\r\n\r\n.carousel-3d-controls, .prev, .next {\r\n  color: white !important;\r\n}\r\n\r\n.slide{\r\n  box-shadow: red 0px 90px;\r\n  border-radius: 20px;\r\n  height: 10%;\r\n}\r\n</style>"],"mappings":"AAqCA,SAAAA,UAAA,EAAAC,KAAA;AACA,OAAAC,cAAA;AAEA;EACAC,KAAA;IACA;MACAC,cAAA;IACA;EACA;EACAC,QAAA;IACA;IACA,MAAAC,cAAA,GAAAC,MAAA,CAAAC,WAAA;IACA,KAAAJ,cAAA,GAAAK,IAAA,CAAAC,KAAA,CAAAJ,cAAA;EACA;EACAK,UAAA;IACAX,UAAA;IACAC,KAAA;IACAC;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}